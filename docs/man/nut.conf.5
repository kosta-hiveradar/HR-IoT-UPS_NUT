'\" t
.\"     Title: nut.conf
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 08/08/2025
.\"    Manual: NUT Manual
.\"    Source: Network UPS Tools 2.8.4
.\"  Language: English
.\"
.TH "NUT\&.CONF" "5" "08/08/2025" "Network UPS Tools 2\&.8\&.4" "NUT Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nut.conf \- UPS definitions for Network UPS Tools
.SH "DESCRIPTION"
.sp
This file attempts to standardize the various files being found in different installations, like /etc/default/nut on Debian based systems and /etc/sysconfig/ups on RedHat based systems\&.
.sp
Distribution\(cqs init script should source this file in order to determine which components have to be started\&.
.sp
Blank lines are ignored\&. Lines with a hash (#) character at the first position of the line are ignored, too\&. They can be used to add comments\&.
.SH "IMPORTANT NOTES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
This file is intended to be sourced by shell scripts as well as by service management frameworks like systemd on Linux:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
There is no guaranteed
export VAR=VAL
syntax
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
No guaranteed expansion of variables like
VAR1="$VAR2\-something" \(em  only verbatim assignments
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
You may need to
export VAR
when sourcing it into init\-scripts or other scripts, for eventual propagation of certain settings to NUT programs\&. Not\-exported variables can only be consumed by the script which "sourced" the file (and may choose to
export
them independently)\&.
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
You MUST NOT use spaces around the equal sign!
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Practical support for this file and its settings currently varies between different OS packages and NUT sample scripts, but should converge over time\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Contents of this file should be pure ASCII (character codes not in range would be ignored with a warning message)\&.
.RE
.sp
Refer to the EXAMPLE section for illustrations\&.
.SH "DIRECTIVES"
.PP
\fBMODE\fR
.RS 4
Required\&. Recognized values are
\fInone\fR,
\fIstandalone\fR,
\fInetserver\fR
and
\fInetclient\fR\&. Defaults to
\fInone\fR\&.
.PP
none
.RS 4
Indicates that NUT should not get started automatically, possibly because it is not configured or that an Integrated Power Management or some external system, is used to startup the NUT components\&.
.RE
.PP
standalone
.RS 4
Addresses a local only configuration, with 1 UPS protecting the local system\&. This implies to start the 3 NUT layers (driver, upsd and upsmon), with the related configuration files\&. This mode can also address UPS redundancy\&.
.RE
.PP
netserver
.RS 4
Like the standalone configuration, but also possibly need one or more specific LISTEN directive(s) in upsd\&.conf\&. Since this MODE is open to the network, a special care should be applied to security concerns\&.
.RE
.PP
netclient
.RS 4
When only upsmon is required, possibly because there are other hosts that are more closely attached to the UPS, the MODE should be set to netclient\&.
.RE
.RE
.PP
\fBALLOW_NO_DEVICE\fR
.RS 4
Optional, defaults to
false\&. Set this to
true
to allow starting the
upsd
NUT data server service even if
ups\&.conf
has no device sections configured at the moment\&. This environment variable overrides the built\-in "false" flag value in the
upsd
program, and an optional same\-named default flag that can be set in
upsd\&.conf\&.
.sp
If you want a data server always running and responding on the network, even if it initially has nothing to serve (may be live\-reloaded later, when devices become configured), this option is for you\&.
.RE
.PP
\fBALLOW_NOT_ALL_LISTENERS\fR
.RS 4
Optional, defaults to
false\&. Set this to
true
to allow starting the
upsd
NUT data server even if not all
LISTEN
directives can be honoured at the moment\&. This environment variable overrides the built\-in "false" flag in the
upsd
program, and an optional same\-named default flag that can be set in
upsd\&.conf\&.
.sp
If you want a data server always running, even if it would potentially not serve all clients on every uptime, this option is for you (note you would have to restart
upsd
to pick up the `LISTEN`ed IP address if it appears later)\&.
.sp
Probably configuring
LISTEN *
is a better choice in such cases\&.
.RE
.PP
\fBUPSD_OPTIONS\fR
.RS 4
Optional\&. Set upsd specific options\&. See
\fBupsd\fR(8)
for more details\&. It is ignored when
\fIMODE\fR
above indicates that no upsd should be running\&.
.RE
.PP
\fBUPSMON_OPTIONS\fR
.RS 4
Optional\&. Set upsmon specific options\&. See
\fBupsmon\fR(8)
for more details\&. It is ignored when
\fIMODE\fR
above indicates that no
upsmon
should be running\&.
.RE
.PP
\fBPOWEROFF_WAIT\fR
.RS 4
Optional\&. At the end of an emergency system halt, the upsmon primary will signal the UPS to switch off\&. This may fail for a number of reasons\&. Most notably is the case that mains power returns during the shutdown process\&. See the section "Power races" in
/usr/share/doc/nut/FAQ\&.txt\&.gz\&. The system will wait this long for the UPS to cut power, and then reboot\&. It should be long enough to exhaust the batteries, in case line power continues to be unavailable\&. On the other hand, it should not be so long that the system remains offline for an unreasonable amount of time if line power has returned\&. See
\fBsleep\fR(1)
for compatible time syntax\&. If you specify the time in seconds, use the "s" suffix\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
This workaround might be dangerous under some circumstances\&. Please read
http://bugs\&.debian\&.org/358696
for more details\&.
.sp .5v
.RE
.RE
.PP
\fBPOWEROFF_QUIET\fR
.RS 4
Optional, defaults to
false\&. This setting controls if the NUT shutdown integration scripts or service units would emit messages about their activity (or lack thereof)\&. By default they may be verbose, to aid in post\-mortem troubleshooting via logs or console captures\&. Set to
true
to avoid that trove of information, if you consider it noise\&.
.RE
.PP
\fBNUT_DEBUG_LEVEL\fR
.RS 4
Optional, defaults to
0\&. This setting controls the default debugging message verbosity passed to NUT daemons\&. As an environment variable, its priority sits between that of
\fIDEBUG_MIN\fR
setting of a driver and the command\-line options\&.
.RE
.PP
\fBNUT_DEBUG_PID\fR
.RS 4
Optionally add current process ID to tags with debug\-level identifiers\&. This may be useful when many NUT daemons write to the same console or log file, such as in containers/plugins for Home Assistant, storage appliances\&...
.RE
.PP
\fBNUT_DEBUG_SYSLOG\fR
.RS 4
Optional, unset by default\&. Normally NUT can (attempt to) use the syslog or Event Log (WIN32), but the environment variable
\fINUT_DEBUG_SYSLOG\fR
allows to bypass it, and perhaps keep the daemons logging to stderr (useful e\&.g\&. in NUT Integration Test suite to not pollute the OS logs, or in systemd where stderr and syslog both go into the same journal)\&. Recognized values:
.TS
allbox tab(:);
ltB ltB.
T{
Value
T}:T{
Description
T}
.T&
lt lt
lt lt
lt lt
lt lt.
T{
stderr
T}:T{
.if n \{\
.RS 4
.\}
.nf
Disabled and `background()` keeps `stderr` attached
.fi
.if n \{\
.RE
.\}
T}
T{
none
T}:T{
.if n \{\
.RS 4
.\}
.nf
Disabled and `background()` detaches `stderr` as usual
.fi
.if n \{\
.RE
.\}
T}
T{
default
T}:T{
.if n \{\
.RS 4
.\}
.nf
Not disabled
.fi
.if n \{\
.RE
.\}
T}
T{
unset/other
T}:T{
.if n \{\
.RS 4
.\}
.nf
Not disabled
.fi
.if n \{\
.RE
.\}
T}
.TE
.sp 1
.RE
.PP
\fBNUT_IGNORE_CHECKPROCNAME\fR
.RS 4
Optional, defaults to
false\&. Normally NUT can (attempt to) verify that the program file name matches the name associated with a running process, when using PID files to send signals\&.
.sp
The
NUT_IGNORE_CHECKPROCNAME
boolean toggle allows to quickly skip such verification, in case it causes problems (e\&.g\&. NUT programs were renamed and do not match built\-in expectations)\&.
.sp
This environment variable can also be optionally set in init\-scripts or service methods for
upsd,
upsmon
and NUT drivers/upsdrvctl\&.
.RE
.PP
\fBNUT_QUIET_INIT_UPSNOTIFY\fR
.RS 4
Optional flag to prevent daemons which can notify service management frameworks (such as systemd) about passing their lifecycle milestones, to not report loudly if they could NOT do so (e\&.g\&. running on a system without a framework, or misconfigured so they could not report and the OS could eventually restart the false\-positively identified "unresponsive" service\&.
.sp
Currently such reports, done by default, help troubleshoot service start\-up and highlight that NUT sources (or package build) did not take advantage of tighter OS service management framework integration (if one exists, so that developers could focus on adding that)\&. Reasons to set this flag could include platforms without such a framework and not expecting one, although nagging your favourite OS or contributing development to make it better is also a way\&.
.RE
.SH "EXAMPLE"
.sp
.if n \{\
.RS 4
.\}
.nf
   # /etc/nut/nut\&.conf\&.  See nut\&.conf(5)

   MODE=none

   UPSD_OPTIONS=""

   UPSMON_OPTIONS=""

   # POWEROFF_WAIT=15m
.fi
.if n \{\
.RE
.\}
.SH "INTEGRATION"
.sp
An init script, such as /etc/init\&.d/nut, is expected to source this file in order to determine which components have to be started\&.
.SH "SEE ALSO"
.sp
\fBups.conf\fR(5), \fBupsd.conf\fR(5), \fBupsd.users\fR(5), \fBupsmon.conf\fR(5)
.SS "Internet resources:"
.sp
The NUT (Network UPS Tools) home page: https://www\&.networkupstools\&.org/historic/v2\&.8\&.4/
